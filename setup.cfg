[metadata]
name = ekklesia-portal
description = portal component of the Ekklesia eDemocracy system
version= file: src/ekklesia_portal/VERSION
long_description = file: README.md
long_description_content_type = text/markdown
author = dpausp
author_email = dpausp@posteo.de
license = GNU Affero General Public License v3 or later (AGPLv3+)
classifiers =
    License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
    License :: OSI Approved :: GNU General Public License v3 (GPLv3)
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7

keywords = argument, argument mapping, debate, portal, ekklesia, evoting, edemocracy, democracy, voting

[options]
include_package_data = True
setup_requires =
    setuptools_scm
install_requires =
    alembic
    attrs
    case-conversion
    dataclasses-json
    deform
    eliot
    jinja2
    more.babel-i18n
    more.browser-session
    more.forwarded
    more.itsdangerous
    more.transaction
    morepath
    munch
    passlib
    psycopg2
    py-gfm
    pyjade
    pyyaml
    requests-oauthlib
    sqlalchemy
    sqlalchemy-searchable
    zope.sqlalchemy

tests_require =
    colorama
    coverage
    inflect
    mimesis-factory
    pytest
    pytest-cov
    pytest-factoryboy
    pytest-instafail
    pytest-localserver
    pytest-mock
    pytest-pspec
    requests
    responses
    typing-extensions
    webtest

packages = find:
package_dir =
    = src
python_requires = ~=3.7

[options.packages.find]
where=src

[tool:pytest]
addopts =
    --show-capture=no
    -ra
    --tb=short
    -k "not integration"
filterwarnings =
    ignore::DeprecationWarning
norecursedirs=tests/helpers
testpaths = tests
markers =
    integration: An Integration test which is allowed to modify the test database.

[pycodestyle]
max_line_length = 140

[coverage:run]
omit =
    src/ekklesia_portal/runserver.py
    src/ekklesia_portal/pathtool.py

[coverage:report]
skip_covered = True
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

